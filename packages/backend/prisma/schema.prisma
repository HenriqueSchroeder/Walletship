generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum user_role {
  USER
  ADMIN
}

model user {
  id       String    @id @unique @default(uuid())
  email    String    @unique
  name     String
  role     user_role @default(USER)
  password String
  isActive Boolean   @default(true) // logo deve ser alterado para false e feito verificação de email

  category category[]
  wallet   wallet[]
}

model wallet {
  id        String   @id @unique @default(uuid())
  title     String
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category category[]
  movement movement[]

  userId String
  user   user   @relation(fields: [userId], references: [id])
}

model category {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?

  movement movement[]

  userId   String
  user     user    @relation(fields: [userId], references: [id])
  walletId String?
  wallet   wallet? @relation(fields: [walletId], references: [id])
}

model movement {
  id           String   @id @unique @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  dateMoviment DateTime
  content      String?
  value        Float

  walletId   String
  wallet     wallet   @relation(fields: [walletId], references: [id])
  categoryId String
  category   category @relation(fields: [categoryId], references: [id])
}
